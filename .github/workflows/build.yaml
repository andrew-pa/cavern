name: Build, Checks and Tests Images

on:
  push:
    branches:
      - main
  pull_request:
    branches:
        - '**'

jobs:
  build-and-check:
    runs-on: ubuntu-latest

    steps:
    - name: Install just
      uses: extractions/setup-just@v2

    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Rust toolchain
      id: setup-rust
      uses: dtolnay/rust-toolchain@nightly
      with:
        toolchain: nightly
        components: rustfmt, clippy
        targets: aarch64-unknown-none

    - name: Cache Rust dependencies and build intermediates
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ steps.setup-rust.outputs.cachekey }}-${{ hashFiles('**/Cargo.lock') }}

    - name: Lint and check changes
      run: just check

    - name: Run unit tests
      run: just test

    - name: Install target architecture binutils
      run: sudo apt-get update -qq && sudo apt-get install -y binutils-aarch64-linux-gnu

    - name: Get U-boot commit hash
      run: git submodule init && echo "U_BOOT_COMMIT_HASH=$(git submodule status | grep u-boot | cut -d ' ' -f 1)" >> $GITHUB_ENV

    - name: Cached U-boot build
      id: cache-uboot
      uses: actions/cache@v4
      with:
        path: .build/vendor/u-boot
        key: u-boot${{ env.U_BOOT_COMMIT_HASH }}

    - name: Build U-boot
      if: steps.cache-uboot.outputs.cache-hit != 'true'
      run: |
        sudo apt-get install -y gcc-aarch64-linux-gnu
        git submodule update --init --depth 1 vendor/u-boot
        just build_u-boot

    - name: Build kernel and initrd image
      run: just make-images

    - name: Upload image artifacts
      uses: actions/upload-artifact@v4
      with:
        name: images
        path: .build/image

  test:
    runs-on: ubuntu-latest
    needs: build-and-check
    steps:
    - name: Install just
      uses: extractions/setup-just@v2

    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install QEMU
      run: sudo apt-get update -qq && sudo apt-get install -y --no-install-recommends -o Dpkg::Options::="--no-triggers" qemu-system-arm ipxe-qemu

    - name: Get U-boot commit hash
      run: git submodule init && echo "U_BOOT_COMMIT_HASH=$(git submodule status | grep u-boot | cut -d ' ' -f 1)" >> $GITHUB_ENV

    - name: Create .build directory
      run: mkdir .build

    - name: Cached U-boot build
      id: cache-uboot
      uses: actions/cache@v4
      with:
        path: .build/vendor/u-boot
        key: u-boot${{ env.U_BOOT_COMMIT_HASH }}

    - name: Download built image
      uses: actions/download-artifact@v4
      with:
        name: images
        path: .build/image

    - name: Run kernel integration tests
      run: just --no-deps run-qemu "-m 4G -smp 4" '{"log_level":"Trace", "init_exec_name":"check-syscalls"} '
